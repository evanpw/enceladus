# Solves Project Euler 3

let n :: Int = 600851475143
let biggest :: Int = 0

# Loop over all possible divisors of n
let i :: Int = 2
while i * i <= n do

	# When we find a divisor, determine whether it is a prime number
	if n mod i == 0 then
		let j :: Int = 2
		let is_prime :: Int = 1
		while j * j <= i do
			if i mod j == 0 then
				is_prime  = 0

				# We don't have a "break" statement
				j = i

			j = j + 1

		if is_prime == 1 then
			biggest = i

	i = i + 1

print biggest
