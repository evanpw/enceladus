# Solves Project Euler 13
import BigInt
import IO
import String

def readNumber() -> BigInt
    ys := []

    line := readLine()
    pieces := line.unwrap().split()

    assert pieces.length() == 50

    # TODO: This would be better solved with map, but lambdas don't exist / work
    # very well yet
    for piece in pieces
        ys = ys.insert(Int::fromString(piece).unwrap())

    return BigInt(ys)

xs := toBigInt(0)
for i in range(0, 100)
    xs = xs.plus(readNumber())

n := 0
for x in xs.digits().reverse().take(10)
    n = (n * 10) + x

println $ show(n)
