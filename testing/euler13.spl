-- Solves Project Euler 13

def longSum xs ys :: [Int] -> [Int] -> [Int] =
    carry := 0
    result := []

    x := 0
    y := 0
    while not (null xs and null ys and carry == 0) do
        if null xs then
            x = 0
        else
            x = head xs
            xs = tail xs

        if null ys then
            y = 0
        else
            y = head ys
            ys = tail ys

        z := x + y + carry

        result = (z mod 10) : result
        carry = z / 10

    return reverse result

xs := []

for i in range 1 100 do
    ys := []
    for j in range 1 50 do
        ys = read : ys

    xs = longSum xs ys

n := 0
for x in take 10 $ reverse xs do
    n = (n * 10) + x

print n



