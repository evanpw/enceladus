# Solves Project Euler 18

import String

def readInput() -> [[Int]]
    pyramid := []

    forever
        maybeLine := readLine()

        match maybeLine
            Some(line)
                xs := []
                for s in line.split()
                    xs = s.toInt().unwrap() :: xs

                row := xs.reverse()

                pyramid = row :: pyramid

            None
                break

    return pyramid.reverse()

def bestRouteFrom(x: Int, y: Int, pyramid: [[Int]]) -> Int
    row := pyramid.at(y)
    here := row.at(x)

    if y == pyramid.length() - 1
        return here
    else
        left := bestRouteFrom(x, y + 1, pyramid)
        right := bestRouteFrom(x + 1, y + 1, pyramid)

        return max(left, right) + here

print $ show $ bestRouteFrom(0, 0, readInput())
