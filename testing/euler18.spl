-- Solves Project Euler 18

def readInput :: [[Int]] =
    pyramid := []

    keepGoing := True
    while keepGoing do
        line := readLine

        if null line then
            keepGoing = False
        else
            xs := []
            for s in split line do
                xs = (stringToInt s) : xs

            row := reverse xs

            pyramid = row : pyramid

    return reverse pyramid

def bestRouteFrom x y pyramid :: Int -> Int -> [[Int]] -> Int =
    row := at y pyramid
    here := at x row

    if y == (length pyramid - 1) then
        return here
    else
        left := bestRouteFrom x (y + 1) pyramid
        right := bestRouteFrom (x + 1) (y + 1) pyramid

        return (max left right) + here

print $ bestRouteFrom 0 0 readInput

