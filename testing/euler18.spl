# Solves Project Euler 18

import String

def readInput() -> [[Int]]
    pyramid := []

    forever
        line := readLine()

        if isSome(line)
            xs := []
            for s in split(unwrap(line))
                xs = unwrap(stringToInt(s)) :: xs

            row := reverse(xs)

            pyramid = row :: pyramid
        else
            break

    return reverse(pyramid)

def bestRouteFrom(x: Int, y: Int, pyramid: [[Int]]) -> Int
    row := at(y, pyramid)
    here := at(x, row)

    if y == length(pyramid) - 1
        return here
    else
        left := bestRouteFrom(x, y + 1, pyramid)
        right := bestRouteFrom(x + 1, y + 1, pyramid)

        return max(left, right) + here

print $ show $ bestRouteFrom(0, 0, readInput())
