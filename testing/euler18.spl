# Solves Project Euler 18
import IO
import String

def readInput() -> [[Int]]
    pyramid := []

    forever
        maybeLine := readLine(stdin)

        match maybeLine
            Some(line)
                xs := []
                for s in line.split()
                    xs = xs.insert $ s.toInt().unwrap()

                row := xs.reverse()

                pyramid = pyramid.insert(row)

            None
                break

    return pyramid.reverse()

def bestRouteFrom(x: UInt, y: UInt, pyramid: [[Int]]) -> Int
    row := pyramid.at(y)
    here := row.at(x)

    if y == pyramid.length() - 1
        return here
    else
        left := bestRouteFrom(x, y + 1, pyramid)
        right := bestRouteFrom(x + 1, y + 1, pyramid)

        return max(left, right) + here

println $ show $ bestRouteFrom(0, 0, readInput())
