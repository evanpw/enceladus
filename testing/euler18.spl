-- Solves Project Euler 18

import String

def readInput () -> [String] =
    pyramid := []

    keepGoing := True
    while keepGoing:
        line := readLine

        if null line:
            keepGoing = False
        else:
            xs := []
            for s in split line:
                xs = (stringToInt s) :: xs

            row := reverse xs

            pyramid = row :: pyramid

    return reverse pyramid

def bestRouteFrom (x: Int, y: Int, pyramid: [String]) -> Int =
    row := at y pyramid
    here := at x row

    if y == (length pyramid - 1):
        return here
    else:
        left := bestRouteFrom x (y + 1) pyramid
        right := bestRouteFrom (x + 1) (y + 1) pyramid

        return (max left right) + here

print $ show $ bestRouteFrom 0 0 readInput

