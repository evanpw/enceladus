# Solves Project Euler #28

# Final result
total := 0

# Number the locations based on the order visited
i := 1

def isDiagonal(x: Int, y: Int) -> Bool
    return (x == y) or (x == -y)

def check(x: Int, y: Int)
    if isDiagonal(x, y)
        total += i

    i += 1


check(0, 0)

n := 1
while 2 * n + 1 <= 1001
    x := n
    y := n

    # Down
    for i in 0 to 2 * n
        y -= 1
        check(x, y)

    # Left
    for i in 0 to 2 * n
        x -= 1
        check(x, y)

    # Up
    for i in 0 to 2 * n
        y += 1
        check(x, y)

    # Right
    for i in 0 to 2 * n
        x += 1
        check(x, y)

    n += 1

println $ show(total)
