trait Nothing
    def nothing(self) -> Unit

def getAnything() -> T where T: Nothing
    panic $ "Nope"

impl Nothing for Int
    def nothing(self) -> Unit
        pass

impl Nothing for UInt
    def nothing(self) -> Unit
        pass

x := getAnything()  # Has type T: Nothing (unquantified)
x.nothing()         # Ambiguous (shouldn't match trait method)
