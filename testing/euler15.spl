data Pair = Pair Int Int
data Memo = Memo Pair Int

let memo = []
def searchMemo p :: Pair -> Int =
    let Pair x y = p

    for m in memo do
        let Memo p' count = m
        let Pair x' y' = p'

        if x == x' and y == y' then
            return count

    return -1

def insertMemo p count :: Pair -> Int -> Unit =
    memo = (Memo p count) : memo

def countPaths p :: Pair -> Int =
    let Pair x y = p

    if x == 20 and y == 20 then return 1
    if x > 20 or y > 20 then return 0

    let memoCount = searchMemo p
    if memoCount >= 0 then return memoCount

    let count = 0
    count += countPaths $ Pair (x + 1) y
    count += countPaths $ Pair x (y + 1)

    insertMemo p count
    return count

print $ countPaths $ Pair 0 0
