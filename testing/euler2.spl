# Solves Project Euler 2
struct Fib
    current: Int
    last: Int

impl Fib
    def new() -> Self
        return Fib(1, 1)

impl Iterator<Int> for Fib
    def next(self) -> Option<Int>
        next := self.current + self.last
        self.last = self.current
        self.current = next

        return Some(self.last)

def lessThan4M(x: Int) -> Bool
    return x < 4000000

fib := Fib::new()
result := fib.takeWhile(lessThan4M).filter(even).sum()
println $ show(result)
