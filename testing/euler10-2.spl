-- Solves Project Euler 10

def cross_off p xs :: Int -> List -> List =
    if null xs then
        return []
    else
        let x :: Int = head xs
        if x mod p != 0 then
            return x : cross_off p (tail xs)
        else
            return cross_off p (tail xs)

def sieve ys :: List -> List =
    let p :: Int = head ys
    let xs :: List = tail ys
    print p
    let zs :: List = cross_off p xs

    return p : sieve zs

print sum $ sieve $ range 2 2000000

