Todo
----
* Better memory management (in the compiler)
* Clean up Makefile
* Ignore the result of a function call
* Make semantic analysis more rigorous
* Add garbage collection or reference counting
* Ability to import modules
* Handle null-ary functions correctly
* Move to a functional language?
* Merge linux and osx libraries using macros
* Attach function definition to each function call to avoid dynamic_cast in
  type checking.
* Modify visitor pattern to have preVisit and postVisit methods, and do all of
  the traversal code elsewhere, so that implementers don't have to remember to
  do the recursion
* Fix bug that causes bad line numbers and columns in error messages
* Type inference for variables in simple cases (like a literal rhs)
* Syntactic sugar for lists
* Clean up the documentation
* Add some support for strings (at least when printing)
* Replace C library calls with direct system calls
* Handle the case where prelude does not end with a newline
* Support for infix functions
* If lexer finds an error, don't continue parsing
* Find out why euler11 segfaults when run in valgrind
* Tree and/or Set data structures
* Make null, head, tail into real functions
* Make return at least act like a function (useable with $ for example)
* Use pointers to the beginning of the allocated space instead of just past the ref count
