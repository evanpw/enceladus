#include "parser/tokens.hpp"

std::string tokenToString(TokenType t)
{
    switch(t)
    {
    case tNONE:
        return "NONE";
    case tAND:
        return "AND";
    case tAS:
        return "tAS";
    case tASSERT:
        return "ASSERT";
    case tBREAK:
        return "BREAK";
    case tCOLON_EQUAL:
        return "COLON_EQUAL";
    case tCONCAT:
        return "CONCAT";
    case tDARROW:
        return "DARROW";
    case tDATA:
        return "DATA";
    case tDCOLON:
        return "DCOLON";
    case tDEDENT:
        return "DEDENT";
    case tDEF:
        return "DEF";
    case tDIV_EQUAL:
        return "DIV_EQUAL";
    case tELIF:
        return "ELIF";
    case tELSE:
        return "ELSE";
    case tEOF:
        return "EOF";
    case tEOL:
        return "EOL";
    case tEQUALS:
        return "EQUALS";
    case tFALSE:
        return "FALSE";
    case tFOR:
        return "FOR";
    case tFOREIGN:
        return "FOREIGN";
    case tFOREVER:
        return "FOREVER";
    case tGE:
        return "GE";
    case tIF:
        return "IF";
    case tIMPL:
        return "IMPL";
    case tIN:
        return "IN";
    case tINDENT:
        return "INDENT";
    case tINT_LIT:
        return "INT_LIT";
    case tLE:
        return "LE";
    case tLET:
        return "LET";
    case tLIDENT:
        return "LIDENT";
    case tMATCH:
        return "MATCH";
    case tMINUS_EQUAL:
        return "MINUS_EQUAL";
    case tMOD:
        return "MOD";
    case tNE:
        return "NE";
    case tNOT:
        return "NOT";
    case tOR:
        return "OR";
    case tPLUS_EQUAL:
        return "PLUS_EQUAL";
    case tRARROW:
        return "RARROW";
    case tRETURN:
        return "RETURN";
    case tSTRING_LIT:
        return "STRING_LIT";
    case tSTRUCT:
        return "STRUCT";
    case tTIMES_EQUAL:
        return "TIMES_EQUAL";
    case tTO:
        return "TO";
    case tTRUE:
        return "TRUE";
    case tTYPE:
        return "TYPE";
    case tUIDENT:
        return "UIDENT";
    case tVAR:
        return "VAR";
    case tWHILE:
        return "WHILE";
    case tWHITESPACE:
        return "WHITESPACE";
    default:
        char c = (char)t;
        return std::string(1, c);
    }
}
