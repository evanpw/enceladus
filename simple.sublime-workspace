{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"right",
				"__insert_right"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"command_palette":
	{
		"height": 49.0,
		"selected_items":
		[
			[
				"Remove",
				"Package Control: Remove Package"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Enable Package"
			]
		],
		"width": 435.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/evanpw/Workspace/simple/x86_codegen.cpp",
		"/Users/evanpw/Workspace/simple/tac_instruction.hpp",
		"/Users/evanpw/Workspace/simple/ast.hpp",
		"/Users/evanpw/Workspace/simple/scope.hpp",
		"/Users/evanpw/Workspace/simple/symbol_table.hpp",
		"/Users/evanpw/Workspace/simple/tac_codegen.cpp",
		"/Users/evanpw/Workspace/simple/build/test.asm",
		"/Users/evanpw/Workspace/simple/codegen.cpp",
		"/Users/evanpw/Workspace/simple/symbol_table.cpp",
		"/Users/evanpw/Workspace/simple/symbol.hpp",
		"/Users/evanpw/Workspace/simple/testing/shortCircuit.spl",
		"/Users/evanpw/Workspace/simple/target_codegen.hpp",
		"/Users/evanpw/Workspace/simple/docs/TODO",
		"/Users/evanpw/Workspace/simple/testing/euler1.spl",
		"/Users/evanpw/Workspace/simple/x86_codegen.hpp",
		"/Users/evanpw/Workspace/simple/address.hpp",
		"/Users/evanpw/Workspace/simple/address.cpp",
		"/Users/evanpw/Workspace/simple/euler1.asm",
		"/Users/evanpw/Workspace/simple/testing/test.spl",
		"/Users/evanpw/Workspace/simple/prelude.spl",
		"/Users/evanpw/Workspace/simple/euler1-2.asm",
		"/Users/evanpw/Workspace/simple/simplec.cpp",
		"/Users/evanpw/Workspace/simple/tac_codegen.hpp",
		"/Users/evanpw/Workspace/simple/semantic.cpp",
		"/Users/evanpw/Workspace/simple/build/poly2.asm",
		"/Users/evanpw/Workspace/simple/testing/read.spl",
		"/Users/evanpw/Workspace/simple/codegen2.cpp",
		"/Users/evanpw/Workspace/simple/codegen2.hpp",
		"/Users/evanpw/Workspace/simple/simplec",
		"/Users/evanpw/Workspace/simple/simple.flex",
		"/Users/evanpw/Workspace/simple/String.spl",
		"/Users/evanpw/Workspace/simple/tac_instruction.cpp",
		"/Users/evanpw/Workspace/simple/testing/test2.spl",
		"/Users/evanpw/Workspace/simple/build/test2.asm",
		"/Users/evanpw/Workspace/simple/build/euler22.asm",
		"/Users/evanpw/Workspace/simple/testing/euler13.spl",
		"/Users/evanpw/Workspace/simple/testing/euler22.spl",
		"/Users/evanpw/Workspace/simple/BigInt.spl",
		"/Users/evanpw/Workspace/simple/build/euler13.asm",
		"/Users/evanpw/Workspace/simple/build/shortCircuit.asm",
		"/Users/evanpw/Workspace/simple/testing/all.sh",
		"/Users/evanpw/Workspace/simple/build/euler1.asm",
		"/Users/evanpw/Workspace/simple/build/test2",
		"/Users/evanpw/Workspace/simple/string_table.cpp",
		"/Users/evanpw/Workspace/simple/build/euler1",
		"/Users/evanpw/Workspace/simple/build/shortCircuit",
		"/Users/evanpw/Workspace/simple/build/euler13",
		"/Users/evanpw/Workspace/simple/codegen.hpp",
		"/Users/evanpw/Workspace/simple/tokens.cpp",
		"/Users/evanpw/Workspace/simple/symbol.cpp",
		"/Users/evanpw/Workspace/simple/ast.cpp",
		"/Users/evanpw/Workspace/simple/docs/grammar.y",
		"/Users/evanpw/Workspace/simple/parser.hpp",
		"/Users/evanpw/Workspace/simple/parser.cpp",
		"/Users/evanpw/Workspace/simple/testing/test.sh",
		"/Users/evanpw/Workspace/simple/library.c",
		"/Users/evanpw/Workspace/simple/library.h",
		"/Users/evanpw/Workspace/simple/testing/multiRef.spl",
		"/Users/evanpw/Workspace/simple/build/euler2",
		"/Users/evanpw/Workspace/simple/build/test",
		"/Users/evanpw/Workspace/simple/testing/type_errors.spl",
		"/Users/evanpw/Workspace/simple/testing/euler19-2.spl",
		"/Users/evanpw/Workspace/simple/ast_visitor.hpp",
		"/Users/evanpw/Workspace/simple/semantic.hpp",
		"/Users/evanpw/Workspace/simple/testing/structMembers1.spl",
		"/Users/evanpw/Workspace/simple/testing/structMembers2.spl",
		"/Users/evanpw/Workspace/simple/testing/structMembers3.spl",
		"/Users/evanpw/Workspace/simple/testing/structInference.spl",
		"/Users/evanpw/Workspace/simple/testing/testError.sh",
		"/Users/evanpw/Workspace/simple/build/euler11",
		"/Users/evanpw/Dropbox/Progress/june_2014_address_change",
		"/Users/evanpw/Dropbox/Progress/Abby.csv",
		"/Users/evanpw/Workspace/simple/types.hpp",
		"/Users/evanpw/Workspace/simple/types.cpp",
		"/Users/evanpw/Workspace/simple/closure.spl",
		"/Users/evanpw/Dropbox/Archive/logins",
		"/Users/evanpw/Workspace/simple/grammar.y",
		"/Users/evanpw/Workspace/simple/TODO",
		"/Users/evanpw/Workspace/simple/NOTES",
		"/Users/evanpw/Workspace/simple/testing/euler15.spl",
		"/Users/evanpw/Workspace/simple/testing/closure.spl",
		"/Users/evanpw/Workspace/simple/testing/euler23.spl",
		"/Users/evanpw/Workspace/simple/Sort.spl",
		"/Users/evanpw/Workspace/simple/testing/Sort.spl",
		"/Users/evanpw/Workspace/simple/testing/euler26.spl",
		"/Users/evanpw/Workspace/simple/testing/euler24.spl",
		"/Users/evanpw/Workspace/simple/testing/euler18.spl",
		"/Users/evanpw/Workspace/simple/testing/euler17.spl",
		"/Users/evanpw/Workspace/simple/testing/euler14.spl",
		"/Users/evanpw/Workspace/simple/testing/euler12.spl",
		"/Users/evanpw/Workspace/simple/testing/euler11.spl",
		"/Users/evanpw/Workspace/simple/testing/euler10.spl",
		"/Users/evanpw/Workspace/simple/testing/euler8.spl",
		"/Users/evanpw/Workspace/simple/testing/euler4.spl",
		"/Users/evanpw/Workspace/simple/testing/euler16.spl",
		"/Users/evanpw/Workspace/simple/testing/test.hs",
		"/Users/evanpw/Workspace/simple/testing/euler25.spl",
		"/Users/evanpw/Workspace/simple/testing/euler20.spl",
		"/Users/evanpw/Workspace/simple/testing/euler19.spl",
		"/Users/evanpw/Workspace/simple/testing/euler2.spl",
		"/Users/evanpw/Workspace/simple/Set.spl",
		"/Users/evanpw/Workspace/simple/lexer_transform.cpp",
		"/Users/evanpw/Workspace/simple/lex.yy.c",
		"/Users/evanpw/Workspace/simple/Hello.spl",
		"/Users/evanpw/Workspace/simple/testing/associativity.spl",
		"/Users/evanpw/Workspace/simple/testing/typeConstructor.spl",
		"/Users/evanpw/Workspace/simple/testing/unnamed.spl",
		"/Users/evanpw/Workspace/simple/testing/euler21.spl",
		"/Users/evanpw/Workspace/simple/testing/orderOfOps.spl",
		"/Users/evanpw/Workspace/simple/testing/type_constructor.spl",
		"/Users/evanpw/Workspace/simple/testing/euler7-2.spl",
		"/Users/evanpw/Workspace/simple/tokens.hpp",
		"/Users/evanpw/Workspace/simple/sublime/Simple.tmLanguage",
		"/Users/evanpw/Workspace/simple/testing/euler3.spl",
		"/Users/evanpw/Workspace/simple/testing/euler5.spl",
		"/Users/evanpw/Workspace/simple/testing/euler6.spl",
		"/Users/evanpw/Workspace/simple/testing/poly2.spl",
		"/Users/evanpw/Workspace/simple/scope.cpp",
		"/Users/evanpw/Workspace/simple/testing/euler2-2.spl",
		"/Users/evanpw/Workspace/simple/utility.cpp",
		"/Users/evanpw/Workspace/simple/utility.hpp",
		"/Users/evanpw/Workspace/simple/ast_visitor.cpp",
		"/Users/evanpw/Workspace/simple/testing/localVar.spl",
		"/Users/evanpw/Workspace/simple/testing/unary_minus.spl",
		"/Users/evanpw/Workspace/simple/testing/unaryMinus.spl",
		"/Users/evanpw/Workspace/simple/lexer.py",
		"/Users/evanpw/Workspace/simple/prelude.spl.bak",
		"/Users/evanpw/Workspace/simple/Makefile"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 95.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"decref",
			"_main",
			"show",
			"print",
			"access",
			"Spill",
			"_t0",
			"mangle",
			"_currentFunction",
			"EMIT",
			"makeTemp()()",
			"_numberOfTemps",
			"new TempAddress",
			"TempAddress",
			"_instructions",
			"TACReturn",
			"->str()",
			"getRegisterContaining",
			".address",
			"_usedRegisters",
			"virtual std::string str()",
			"CodeGen2",
			"codegen->visit",
			"TAC\\S+\\*",
			":",
			"struct",
			"offset",
			"->offset",
			"offset",
			"TempAddress",
			"TACJumpIf",
			"incref",
			"TACIndexedAssignment",
			"})",
			"{",
			"TACExternalCall",
			"soporific",
			"TACExternalCall",
			"member.",
			"NameAddress",
			"TACFakeCall",
			"die",
			"resolveSymbol",
			"Symbol",
			"_currentFunctionEnd",
			"_current",
			"_currentLoopEnd",
			".str()",
			"Label",
			"const Label&",
			"b\"",
			"trimChar",
			"null",
			"cmp qword [rsp], rax",
			"BigSum",
			"die",
			"_currentFunctionResult",
			"const std::string&",
			"TACConditionalJump",
			"*arguments[",
			"{&",
			"&",
			"dest.str()",
			".tag",
			"Address*",
			".str()",
			"rhs.str()",
			"lhs.str()",
			"new",
			"NameAddress",
			"*node->address",
			"Address&",
			"const std::shared_ptr",
			"Address&",
			"TACFakeCall",
			"TACCondJump",
			"no",
			"TACAssignment",
			"emit_call",
			"emit_indexed_assignment",
			"emit_call",
			"NameAddress",
			"emit_call",
			"resolveSymbol",
			"NameAddress",
			"emit_cond_jump",
			".str()",
			"void",
			"CodeGen",
			"::visit",
			"Assignable",
			"AssignNode",
			"Assignable",
			"AssignNode",
			"assignable",
			"Assignable",
			"class",
			"free",
			"match",
			"offsetof",
			"+ 2",
			"Spl_INCREF",
			"StructDefNode",
			"MemberAccessNode",
			"Assignable",
			"StructInitNode",
			"StructInit",
			"unary_expression",
			"Struct",
			"StructTyp",
			"ValueConstructor",
			"MatchNode",
			"StructType",
			"Struct",
			"members()",
			"StructDefNode",
			"ValueConstructor",
			"MatchNode",
			"valueConstructor",
			"MemberDesc",
			"StructInitNode",
			"StructDefNode",
			"StructInitNode",
			"createStructInit",
			"intToString",
			"join",
			"Struct",
			"struct"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "simple.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"symbol_table.hpp",
				"symbol_table.hpp"
			],
			[
				"scope.hpp",
				"scope.hpp"
			],
			[
				"ast.hpp",
				"ast.hpp"
			],
			[
				"tac_instru",
				"tac_instruction.hpp"
			],
			[
				"test.asm",
				"build/test.asm"
			],
			[
				"tac_codgen.cpp",
				"tac_codegen.cpp"
			],
			[
				"codegen.cpp",
				"codegen.cpp"
			],
			[
				"x86",
				"x86_codegen.cpp"
			],
			[
				"semantic.cpp",
				"semantic.cpp"
			],
			[
				"target_",
				"target_codegen.hpp"
			],
			[
				"euler1.spl",
				"testing/euler1.spl"
			],
			[
				"prelude.spl",
				"prelude.spl"
			],
			[
				"symbol.hpp",
				"symbol.hpp"
			],
			[
				"address.hpp",
				"address.hpp"
			],
			[
				"tac_codegen.cpp",
				"tac_codegen.cpp"
			],
			[
				"tac_codegen.hpp",
				"tac_codegen.hpp"
			],
			[
				"simplec.cpp",
				"simplec.cpp"
			],
			[
				"address.cpp",
				"address.cpp"
			],
			[
				"tac_instruction.hpp",
				"tac_instruction.hpp"
			],
			[
				"codegen2.cpp",
				"codegen2.cpp"
			],
			[
				"codegen2.hpp",
				"codegen2.hpp"
			],
			[
				"euler22.asm",
				"build/euler22.asm"
			],
			[
				"test2.asm",
				"build/test2.asm"
			],
			[
				"string.spl",
				"String.spl"
			],
			[
				"euler22.spl",
				"testing/euler22.spl"
			],
			[
				"shortcircuit.asm",
				"build/shortCircuit.asm"
			],
			[
				"euler13.asm",
				"build/euler13.asm"
			],
			[
				"bigint.spl",
				"BigInt.spl"
			],
			[
				"euler13.spl",
				"testing/euler13.spl"
			],
			[
				"todo",
				"docs/TODO"
			],
			[
				"codegen.hpp",
				"codegen.hpp"
			],
			[
				"ast.cpp",
				"ast.cpp"
			],
			[
				"parser.hpp",
				"parser.hpp"
			],
			[
				"grammar.y",
				"docs/grammar.y"
			],
			[
				"test.spl",
				"testing/test.spl"
			],
			[
				"euler1.asm",
				"build/euler1.asm"
			],
			[
				"simple.flex",
				"simple.flex"
			],
			[
				"poly2.asm",
				"build/poly2.asm"
			],
			[
				"poly2.spl",
				"testing/poly2.spl"
			],
			[
				"euler15.spl",
				"testing/euler15.spl"
			],
			[
				"type_inference.cpp",
				"type_inference.cpp"
			],
			[
				"makefile",
				"Makefile"
			],
			[
				"build.sh",
				"build.sh"
			],
			[
				"euler3.asm",
				"build/euler3.asm"
			],
			[
				"euler3.spl",
				"testing/euler3.spl"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 182.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
