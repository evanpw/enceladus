<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>spl</string>
	</array>
	<key>keyEquivalent</key>
	<string>^~H</string>
	<key>name</key>
	<string>Simple</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.entity.simple</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.entity.simple</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>In case this regex seems unusual for an infix operator, note that Simple allows any ordinary function application (elem 4 [1..10]) to be rewritten as an infix expression (4 `elem` [1..10]).</string>
			<key>match</key>
			<string>(`)[a-zA-Z_']*?(`)</string>
			<key>name</key>
			<string>keyword.operator.function.infix.simple</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\(\)</string>
			<key>name</key>
			<string>constant.language.unit.simple</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\[\]</string>
			<key>name</key>
			<string>constant.language.empty-list.simple</string>
		</dict>

		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.builtin.simple</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(print|read|readLine|die|assert)\b</string>
		</dict>

		<dict>
			<key>begin</key>
			<string>\b(module)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.simple</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(where)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.simple</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.declaration.module.simple</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#module_name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#module_exports</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[a-z]+</string>
					<key>name</key>
					<string>invalid</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(class)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.simple</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\b(where)\b</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.simple</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.declaration.class.simple</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(Monad|Functor|Eq|Ord|Read|Show|Num|(Frac|Ra)tional|Enum|Bounded|Real(Frac|Float)?|Integral|Floating)\b</string>
					<key>name</key>
					<string>support.class.prelude.simple</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[A-Z][A-Za-z_']*</string>
					<key>name</key>
					<string>entity.other.inherited-class.simple</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[a-z][a-zA-Z0-9_']*\b</string>
					<key>name</key>
					<string>variable.other.generic-type.simple</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(instance)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.simple</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\b(where)\b|$</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.simple</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.declaration.instance.simple</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_signature</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(import)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.simple</string>
				</dict>
			</dict>
			<key>end</key>
			<string>($|;)</string>
			<key>name</key>
			<string>meta.import.simple</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(qualified|as|hiding)</string>
					<key>name</key>
					<string>keyword.other.simple</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#module_name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#module_exports</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(deriving)\s*\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.simple</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>meta.deriving.simple</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b[A-Z][a-zA-Z_']*</string>
					<key>name</key>
					<string>entity.other.inherited-class.simple</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(import|let|var|type|data|struct|match|trait|impl)\b</string>
			<key>name</key>
			<string>keyword.other.simple</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(and|or|in|to)\b</string>
			<key>name</key>
			<string>keyword.other.simple</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\binfix[lr]?\b</string>
			<key>name</key>
			<string>keyword.operator.simple</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(do|if|then|else|while|for|return|break|forever|elif)\b</string>
			<key>name</key>
			<string>keyword.control.simple</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Floats are always decimal</string>
			<key>match</key>
			<string>\b([0-9]+\.[0-9]+([eE][+-]?[0-9]+)?|[0-9]+[eE][+-]?[0-9]+)\b</string>
			<key>name</key>
			<string>constant.numeric.float.simple</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b([0-9]+|0([xX][0-9a-fA-F]+|[oO][0-7]+))\b</string>
			<key>name</key>
			<string>constant.numeric.simple</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#pragma</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.simple</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$|"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.simple</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.simple</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|[abfnrtv\\\"'\&amp;])</string>
					<key>name</key>
					<string>constant.character.escape.simple</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\o[0-7]+|\\x[0-9A-Fa-f]+|\\[0-9]+</string>
					<key>name</key>
					<string>constant.character.escape.octal.simple</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\^[A-Z@\[\]\\\^_]</string>
					<key>name</key>
					<string>constant.character.escape.control.simple</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>Points out splices in ast quotes</string>
			<key>begin</key>
			<string>\[(?:|e|d|t|p)\|</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.other.quasibracket.simple</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(.*)(\|\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.quasiquoted.simple</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.quasibracket.simple</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.other.quasiquote.simple</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\$\(</string>
					<key>name</key>
					<string>keyword.other.splice.simple</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\$</string>
					<key>name</key>
					<string>string.quasiquoted.simple</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[^$]*</string>
					<key>name</key>
					<string>string.quasiquoted.simple</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>Highlight the beginning of a splice.</string>
			<key>match</key>
			<string>\$\(</string>
			<key>name</key>
			<string>keyword.other.splice.simple</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\[[a-zA-Z0-9_']*\|</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.other.quasibracket.simple</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(.*)(\|\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.quasiquoted.simple</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.quasibracket.simple</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.other.quasiquote.simple</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>.*</string>
					<key>name</key>
					<string>string.quasiquoted.simple</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.simple</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.simple</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.octal.simple</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.hexadecimal.simple</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.control.simple</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.simple</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)
			(')
			(?:
				[\ -\[\]-~]                             # Basic Char
			  | (\\(?:NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE
					|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS
					|US|SP|DEL|[abfnrtv\\\"'\&amp;]))       # Escapes
			  | (\\o[0-7]+)                             # Octal Escapes
			  | (\\x[0-9A-Fa-f]+)                       # Hexadecimal Escapes
			  | (\^[A-Z@\[\]\\\^_])                     # Control Chars
			)
			(')
			</string>
			<key>name</key>
			<string>string.quoted.single.simple</string>
		</dict>
		<dict>
			<key>match</key>
			<string>^\s*(def)\s*([a-z][a-zA-Z0-9.']*)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.source.simple</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.source.simple</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>match</key>
			<string>^(foreign)\s*([a-z][a-zA-Z0-9.']*)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.source.simple</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.source.simple</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>match</key>
			<string>\b[A-Z]\w*\b</string>
			<key>name</key>
			<string>constant.other.simple</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#infix_op</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[|!%$?~+:\-=&lt;/&gt;\\^]+|mod|@</string>
			<key>name</key>
			<string>keyword.operator.simple</string>
		</dict>
		<dict>
			<key>match</key>
			<string>,</string>
			<key>name</key>
			<string>punctuation.separator.comma.simple</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.simple</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#).*$\n?</string>
					<key>name</key>
					<string>comment.line.double-dash.simple</string>
				</dict>
			</array>
		</dict>
		<key>infix_op</key>
		<dict>
			<key>match</key>
			<string>(\([|!%$+:\-.=&lt;/&gt;]+\)|\(,+\))</string>
			<key>name</key>
			<string>entity.name.function.infix.simple</string>
		</dict>
		<key>module_exports</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>meta.declaration.exports.simple</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b[a-z][a-zA-Z_'0-9]*</string>
					<key>name</key>
					<string>entity.name.function.simple</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[A-Z][A-Za-z_'0-9]*</string>
					<key>name</key>
					<string>storage.type.simple</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.separator.comma.simple</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#infix_op</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>So named because I don't know what to call this.</string>
					<key>match</key>
					<string>\(.*?\)</string>
					<key>name</key>
					<string>meta.other.unknown.simple</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
		<key>module_name</key>
		<dict>
			<key>match</key>
			<string>[A-Z][A-Za-z._']*</string>
			<key>name</key>
			<string>support.other.module.simple</string>
		</dict>
		<key>type_signature</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#pragma</string>
				</dict>
				<dict>
					<key>match</key>
					<string>-&gt;</string>
					<key>name</key>
					<string>keyword.other.arrow.simple</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=&gt;</string>
					<key>name</key>
					<string>keyword.other.big-arrow.simple</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[a-z][a-zA-Z0-9_']*\b</string>
					<key>name</key>
					<string>variable.other.generic-type.simple</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[A-Z][a-zA-Z0-9_']*\b</string>
					<key>name</key>
					<string>storage.type.simple</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\(\)</string>
					<key>name</key>
					<string>support.constant.unit.simple</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.simple</string>
	<key>uuid</key>
	<string>5C034675-1F6D-497E-8073-369D37E2FD7D</string>
</dict>
</plist>
