* Values of type Int or Bool are tagged, meaning that the least-significant bit
  is always set to 1, in order to distinguish these types from pointers at
  run-time (useful for polymorphic functions). All pointers, on the other hand,
  should have the two least-significant bits set to 0 (i.e., they should be
  divisible by 4), which is true at least for the gcc implementation of malloc.

* True = 11b, False = 01b

* Functions calls must have a name in the first slot, not an expression:
    - Good: f 1 2
            g := f
            g 3 4
    - Bad: (compose f g) 4

* Nullary nodes:
    - If a variable name, then evaluates to the value of the variable
    - If a nullary function, then evaluates to the result of calling the fn
    - If a non-nullary function, then evaluates to a closure around the fn

* Destructors are part of the run-time, so they use a C calling convention